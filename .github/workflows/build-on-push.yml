# This is a basic workflow to help you get started with Actions

name: umg_demo_cloudhub_deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "feature-githubDeploy" branch
  push:
    branches: [ "feature-githubDeploy" ]
  pull_request:
    branches: [ "feature-githubDeploy" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/cache@v4
        with: 
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8     
            

      # Runs a single command using the runners shell
      - name: build with maven
        run: mvn -B package --file pom.xml

      - name: Stamp artifiact file name with commit hash
        run: |
          artifactName1=$(ls target/*jar | head -1)
          commitHash=$(git rev-parse --short "$GITHUB_SHA")
          artifactName2=$(ls target/*jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
          mv $artifactName1 $artifactName2
      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: artifacts
          path: target/*jar
  deploy: 
    needs: build 
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3
      
    - name: Run a one-line script
      run: echo ${{ secrets.CONNECTED_APP_CLIENT_ID }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@v3
      with:
        name: artifacts

    - name: Deploy to NJC POC
      env:
        ID: ${{ secrets.CONNECTED_APP_CLIENT_ID }}
        SECRET: ${{ secrets.CONNECTED_APP_CLIENT_SECRET }}
    - run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -DmuleDeploy \
         -Dmule.artifact=$artifactName \
         -Dclient.id="$ID" \
         -Dclient.secret="$SECRET" \
          
